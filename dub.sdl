name "eventcore"
description "Pro-actor based abstraction layer over operating system asynchronous I/O facilities."
license "MIT"
copyright "Copyright © 2016-2018 Sönke Ludwig"
dependency "during" version="~>0.3.0"
targetType "library"

libs "ws2_32" "user32" platform="windows-dmd"

dependency "taggedalgebraic" version=">=0.10.12 <2.0.0-0"

configuration "epoll" {
	platforms "linux"
	versions "EventcoreEpollDriver"
}

// getaddrinfo_a based DNS lookups
configuration "epoll-gaia" {
	libs "anl"
	versions "EventcoreUseGAIA"
	platforms "linux"
	versions "EventcoreEpollDriver"
}

configuration "cfrunloop" {
	platforms "osx" "ios" "tvos" "watchos"
	versions "EventcoreCFRunLoopDriver"
	lflags "-framework" "CoreFoundation"
	lflags "-framework" "CoreServices"
}

configuration "kqueue" {
	platforms "osx" "freebsd"
	versions "EventcoreKqueueDriver"
}

configuration "winapi" {
	platforms "windows"
	versions "EventcoreWinAPIDriver"
}

configuration "select" {
	platforms "posix" "windows"
	versions "EventcoreSelectDriver"
}

// TODO: The implementation is currently just a bunch of stubs, uncomment once
//       we have a minimal set of functionality actually available.
/*configuration "libasync" {
	dependency "libasync" version="~>0.8.2" optional=true default=false
	versions "EventcoreLibasyncDriver"
}*/

configuration "uring" {
	platforms "linux"
	versions "EventcoreUringDriver"
}

configuration "generic" {
	// Defines eventDriver as the generic EventDriver interface. Setup must be done manually.
}

buildType "unittest-dip1000" {
	buildOptions "unittests" "debugMode" "debugInfo"
	dflags "-preview=dip1000"
}
